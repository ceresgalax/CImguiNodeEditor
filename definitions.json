{
  "SetCurrentEditor": [
    {
      "args": "(EditorContext* ctx)",
      "argsT": [
        {
          "name": "ctx",
          "type": "EditorContext*"
        }
      ],
      "argsoriginal": "(EditorContext * ctx)",
      "call_args": "(ctx)",
      "cimguiname": "axNodeEditor_SetCurrentEditor",
      "defaults": {},
      "funcname": "SetCurrentEditor",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_SetCurrentEditor",
      "ret": "void",
      "signature": "(EditorContext*)",
      "stname": "",
      "templated": false
    }
  ],
  "GetCurrentEditor": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_GetCurrentEditor",
      "defaults": {},
      "funcname": "GetCurrentEditor",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_GetCurrentEditor",
      "ret": "EditorContext*",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "CreateEditor": [
    {
      "args": "(const Config* config)",
      "argsT": [
        {
          "name": "config",
          "type": "const Config*"
        }
      ],
      "argsoriginal": "(const Config * config)",
      "call_args": "(config)",
      "cimguiname": "axNodeEditor_CreateEditor",
      "defaults": {},
      "funcname": "CreateEditor",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_CreateEditor",
      "ret": "EditorContext*",
      "signature": "(const Config*)",
      "stname": "",
      "templated": false
    }
  ],
  "DestroyEditor": [
    {
      "args": "(EditorContext* ctx)",
      "argsT": [
        {
          "name": "ctx",
          "type": "EditorContext*"
        }
      ],
      "argsoriginal": "(EditorContext * ctx)",
      "call_args": "(ctx)",
      "cimguiname": "axNodeEditor_DestroyEditor",
      "defaults": {},
      "funcname": "DestroyEditor",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_DestroyEditor",
      "ret": "void",
      "signature": "(EditorContext*)",
      "stname": "",
      "templated": false
    }
  ],
  "GetConfig": [
    {
      "args": "(EditorContext* ctx)",
      "argsT": [
        {
          "name": "ctx",
          "type": "EditorContext*"
        }
      ],
      "argsoriginal": "(EditorContext * ctx)",
      "call_args": "(ctx)",
      "cimguiname": "axNodeEditor_GetConfig",
      "defaults": {},
      "funcname": "GetConfig",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_GetConfig",
      "ret": "const Config*",
      "signature": "(EditorContext*)",
      "stname": "",
      "templated": false
    }
  ],
  "GetStyle": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_GetStyle",
      "defaults": {},
      "funcname": "GetStyle",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_GetStyle",
      "ret": "Style*",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "GetStyleColorName": [
    {
      "args": "(StyleColor colorIndex)",
      "argsT": [
        {
          "name": "colorIndex",
          "type": "StyleColor"
        }
      ],
      "argsoriginal": "(StyleColor colorIndex)",
      "call_args": "(colorIndex)",
      "cimguiname": "axNodeEditor_GetStyleColorName",
      "defaults": {},
      "funcname": "GetStyleColorName",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_GetStyleColorName",
      "ret": "const char*",
      "signature": "(StyleColor)",
      "stname": "",
      "templated": false
    }
  ],
  "PushStyleColor": [
    {
      "args": "(StyleColor colorIndex, const ImVec4* color)",
      "argsT": [
        {
          "name": "colorIndex",
          "type": "StyleColor"
        },
        {
          "name": "color",
          "type": "const ImVec4*"
        }
      ],
      "argsoriginal": "(StyleColor colorIndex,const ImVec4 \u0026 color)",
      "call_args": "(colorIndex,color)",
      "cimguiname": "axNodeEditor_PushStyleColor",
      "defaults": {},
      "funcname": "PushStyleColor",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_PushStyleColor",
      "ret": "void",
      "signature": "(StyleColor,const ImVec4*)",
      "stname": "",
      "templated": false
    }
  ],
  "PopStyleColor": [
    {
      "args": "(int count)",
      "argsT": [
        {
          "name": "count",
          "type": "int"
        }
      ],
      "argsoriginal": "(int count)",
      "call_args": "(count)",
      "cimguiname": "axNodeEditor_PopStyleColor",
      "defaults": {},
      "funcname": "PopStyleColor",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_PopStyleColor",
      "ret": "void",
      "signature": "(int)",
      "stname": "",
      "templated": false
    }
  ],
  "PushStyleVar": [
    {
      "args": "(StyleVar varIndex, float value)",
      "argsT": [
        {
          "name": "varIndex",
          "type": "StyleVar"
        },
        {
          "name": "value",
          "type": "float"
        }
      ],
      "argsoriginal": "(StyleVar varIndex,float value)",
      "call_args": "(varIndex,value)",
      "cimguiname": "axNodeEditor_PushStyleVar",
      "defaults": {},
      "funcname": "PushStyleVar",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_PushStyleVar",
      "ret": "void",
      "signature": "(StyleVar,float)",
      "stname": "",
      "templated": false
    }
  ],
  "PushStyleVar1": [
    {
      "args": "(StyleVar varIndex, const ImVec2* value)",
      "argsT": [
        {
          "name": "varIndex",
          "type": "StyleVar"
        },
        {
          "name": "value",
          "type": "const ImVec2*"
        }
      ],
      "argsoriginal": "(StyleVar varIndex,const ImVec2 \u0026 value)",
      "call_args": "(varIndex,value)",
      "cimguiname": "axNodeEditor_PushStyleVar",
      "defaults": {},
      "funcname": "PushStyleVar",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_PushStyleVar1",
      "ret": "void",
      "signature": "(StyleVar,const ImVec2*)",
      "stname": "",
      "templated": false
    }
  ],
  "PushStyleVar2": [
    {
      "args": "(StyleVar varIndex, const ImVec4* value)",
      "argsT": [
        {
          "name": "varIndex",
          "type": "StyleVar"
        },
        {
          "name": "value",
          "type": "const ImVec4*"
        }
      ],
      "argsoriginal": "(StyleVar varIndex,const ImVec4 \u0026 value)",
      "call_args": "(varIndex,value)",
      "cimguiname": "axNodeEditor_PushStyleVar",
      "defaults": {},
      "funcname": "PushStyleVar",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_PushStyleVar2",
      "ret": "void",
      "signature": "(StyleVar,const ImVec4*)",
      "stname": "",
      "templated": false
    }
  ],
  "PopStyleVar": [
    {
      "args": "(int count)",
      "argsT": [
        {
          "name": "count",
          "type": "int"
        }
      ],
      "argsoriginal": "(int count)",
      "call_args": "(count)",
      "cimguiname": "axNodeEditor_PopStyleVar",
      "defaults": {},
      "funcname": "PopStyleVar",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_PopStyleVar",
      "ret": "void",
      "signature": "(int)",
      "stname": "",
      "templated": false
    }
  ],
  "Begin": [
    {
      "args": "(const char* id, const ImVec2* size)",
      "argsT": [
        {
          "name": "id",
          "type": "const char*"
        },
        {
          "name": "size",
          "type": "const ImVec2*"
        }
      ],
      "argsoriginal": "(const char * id,const ImVec2 \u0026 size)",
      "call_args": "(id,size)",
      "cimguiname": "axNodeEditor_Begin",
      "defaults": {},
      "funcname": "Begin",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_Begin",
      "ret": "void",
      "signature": "(const char*,const ImVec2*)",
      "stname": "",
      "templated": false
    }
  ],
  "End": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_End",
      "defaults": {},
      "funcname": "End",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_End",
      "ret": "void",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "BeginNode": [
    {
      "args": "(NodeId id)",
      "argsT": [
        {
          "name": "id",
          "type": "NodeId"
        }
      ],
      "argsoriginal": "(NodeId id)",
      "call_args": "(id)",
      "cimguiname": "axNodeEditor_BeginNode",
      "defaults": {},
      "funcname": "BeginNode",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_BeginNode",
      "ret": "void",
      "signature": "(NodeId)",
      "stname": "",
      "templated": false
    }
  ],
  "BeginPin": [
    {
      "args": "(PinId id, PinKind kind)",
      "argsT": [
        {
          "name": "id",
          "type": "PinId"
        },
        {
          "name": "kind",
          "type": "PinKind"
        }
      ],
      "argsoriginal": "(PinId id,PinKind kind)",
      "call_args": "(id,kind)",
      "cimguiname": "axNodeEditor_BeginPin",
      "defaults": {},
      "funcname": "BeginPin",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_BeginPin",
      "ret": "void",
      "signature": "(PinId,PinKind)",
      "stname": "",
      "templated": false
    }
  ],
  "PinRect": [
    {
      "args": "(const ImVec2* a, const ImVec2* b)",
      "argsT": [
        {
          "name": "a",
          "type": "const ImVec2*"
        },
        {
          "name": "b",
          "type": "const ImVec2*"
        }
      ],
      "argsoriginal": "(const ImVec2 \u0026 a,const ImVec2 \u0026 b)",
      "call_args": "(a,b)",
      "cimguiname": "axNodeEditor_PinRect",
      "defaults": {},
      "funcname": "PinRect",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_PinRect",
      "ret": "void",
      "signature": "(const ImVec2*,const ImVec2*)",
      "stname": "",
      "templated": false
    }
  ],
  "PinPivotRect": [
    {
      "args": "(const ImVec2* a, const ImVec2* b)",
      "argsT": [
        {
          "name": "a",
          "type": "const ImVec2*"
        },
        {
          "name": "b",
          "type": "const ImVec2*"
        }
      ],
      "argsoriginal": "(const ImVec2 \u0026 a,const ImVec2 \u0026 b)",
      "call_args": "(a,b)",
      "cimguiname": "axNodeEditor_PinPivotRect",
      "defaults": {},
      "funcname": "PinPivotRect",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_PinPivotRect",
      "ret": "void",
      "signature": "(const ImVec2*,const ImVec2*)",
      "stname": "",
      "templated": false
    }
  ],
  "PinPivotSize": [
    {
      "args": "(const ImVec2* size)",
      "argsT": [
        {
          "name": "size",
          "type": "const ImVec2*"
        }
      ],
      "argsoriginal": "(const ImVec2 \u0026 size)",
      "call_args": "(size)",
      "cimguiname": "axNodeEditor_PinPivotSize",
      "defaults": {},
      "funcname": "PinPivotSize",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_PinPivotSize",
      "ret": "void",
      "signature": "(const ImVec2*)",
      "stname": "",
      "templated": false
    }
  ],
  "PinPivotScale": [
    {
      "args": "(const ImVec2* scale)",
      "argsT": [
        {
          "name": "scale",
          "type": "const ImVec2*"
        }
      ],
      "argsoriginal": "(const ImVec2 \u0026 scale)",
      "call_args": "(scale)",
      "cimguiname": "axNodeEditor_PinPivotScale",
      "defaults": {},
      "funcname": "PinPivotScale",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_PinPivotScale",
      "ret": "void",
      "signature": "(const ImVec2*)",
      "stname": "",
      "templated": false
    }
  ],
  "PinPivotAlignment": [
    {
      "args": "(const ImVec2* alignment)",
      "argsT": [
        {
          "name": "alignment",
          "type": "const ImVec2*"
        }
      ],
      "argsoriginal": "(const ImVec2 \u0026 alignment)",
      "call_args": "(alignment)",
      "cimguiname": "axNodeEditor_PinPivotAlignment",
      "defaults": {},
      "funcname": "PinPivotAlignment",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_PinPivotAlignment",
      "ret": "void",
      "signature": "(const ImVec2*)",
      "stname": "",
      "templated": false
    }
  ],
  "EndPin": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_EndPin",
      "defaults": {},
      "funcname": "EndPin",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_EndPin",
      "ret": "void",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "Group": [
    {
      "args": "(const ImVec2* size)",
      "argsT": [
        {
          "name": "size",
          "type": "const ImVec2*"
        }
      ],
      "argsoriginal": "(const ImVec2 \u0026 size)",
      "call_args": "(size)",
      "cimguiname": "axNodeEditor_Group",
      "defaults": {},
      "funcname": "Group",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_Group",
      "ret": "void",
      "signature": "(const ImVec2*)",
      "stname": "",
      "templated": false
    }
  ],
  "EndNode": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_EndNode",
      "defaults": {},
      "funcname": "EndNode",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_EndNode",
      "ret": "void",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "BeginGroupHint": [
    {
      "args": "(NodeId nodeId)",
      "argsT": [
        {
          "name": "nodeId",
          "type": "NodeId"
        }
      ],
      "argsoriginal": "(NodeId nodeId)",
      "call_args": "(nodeId)",
      "cimguiname": "axNodeEditor_BeginGroupHint",
      "defaults": {},
      "funcname": "BeginGroupHint",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_BeginGroupHint",
      "ret": "bool",
      "signature": "(NodeId)",
      "stname": "",
      "templated": false
    }
  ],
  "GetGroupMin": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_GetGroupMin",
      "defaults": {},
      "funcname": "GetGroupMin",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_GetGroupMin",
      "ret": "ImVec2",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "GetGroupMax": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_GetGroupMax",
      "defaults": {},
      "funcname": "GetGroupMax",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_GetGroupMax",
      "ret": "ImVec2",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "GetHintForegroundDrawList": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_GetHintForegroundDrawList",
      "defaults": {},
      "funcname": "GetHintForegroundDrawList",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_GetHintForegroundDrawList",
      "ret": "ImDrawList*",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "GetHintBackgroundDrawList": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_GetHintBackgroundDrawList",
      "defaults": {},
      "funcname": "GetHintBackgroundDrawList",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_GetHintBackgroundDrawList",
      "ret": "ImDrawList*",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "EndGroupHint": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_EndGroupHint",
      "defaults": {},
      "funcname": "EndGroupHint",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_EndGroupHint",
      "ret": "void",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "GetNodeBackgroundDrawList": [
    {
      "args": "(NodeId nodeId)",
      "argsT": [
        {
          "name": "nodeId",
          "type": "NodeId"
        }
      ],
      "argsoriginal": "(NodeId nodeId)",
      "call_args": "(nodeId)",
      "cimguiname": "axNodeEditor_GetNodeBackgroundDrawList",
      "defaults": {},
      "funcname": "GetNodeBackgroundDrawList",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_GetNodeBackgroundDrawList",
      "ret": "ImDrawList*",
      "signature": "(NodeId)",
      "stname": "",
      "templated": false
    }
  ],
  "Link": [
    {
      "args": "(LinkId id, PinId startPinId, PinId endPinId, const ImVec4* color, float thickness)",
      "argsT": [
        {
          "name": "id",
          "type": "LinkId"
        },
        {
          "name": "startPinId",
          "type": "PinId"
        },
        {
          "name": "endPinId",
          "type": "PinId"
        },
        {
          "name": "color",
          "type": "const ImVec4*"
        },
        {
          "name": "thickness",
          "type": "float"
        }
      ],
      "argsoriginal": "(LinkId id,PinId startPinId,PinId endPinId,const ImVec4 \u0026 color,float thickness)",
      "call_args": "(id,startPinId,endPinId,color,thickness)",
      "cimguiname": "axNodeEditor_Link",
      "defaults": {},
      "funcname": "Link",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_Link",
      "ret": "bool",
      "signature": "(LinkId,PinId,PinId,const ImVec4*,float)",
      "stname": "",
      "templated": false
    }
  ],
  "Flow": [
    {
      "args": "(LinkId linkId, FlowDirection direction)",
      "argsT": [
        {
          "name": "linkId",
          "type": "LinkId"
        },
        {
          "name": "direction",
          "type": "FlowDirection"
        }
      ],
      "argsoriginal": "(LinkId linkId,FlowDirection direction)",
      "call_args": "(linkId,direction)",
      "cimguiname": "axNodeEditor_Flow",
      "defaults": {},
      "funcname": "Flow",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_Flow",
      "ret": "void",
      "signature": "(LinkId,FlowDirection)",
      "stname": "",
      "templated": false
    }
  ],
  "BeginCreate": [
    {
      "args": "(const ImVec4* color, float thickness)",
      "argsT": [
        {
          "name": "color",
          "type": "const ImVec4*"
        },
        {
          "name": "thickness",
          "type": "float"
        }
      ],
      "argsoriginal": "(const ImVec4 \u0026 color,float thickness)",
      "call_args": "(color,thickness)",
      "cimguiname": "axNodeEditor_BeginCreate",
      "defaults": {},
      "funcname": "BeginCreate",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_BeginCreate",
      "ret": "bool",
      "signature": "(const ImVec4*,float)",
      "stname": "",
      "templated": false
    }
  ],
  "QueryNewLink": [
    {
      "args": "(PinId* startId, PinId* endId)",
      "argsT": [
        {
          "name": "startId",
          "type": "PinId*"
        },
        {
          "name": "endId",
          "type": "PinId*"
        }
      ],
      "argsoriginal": "(PinId * startId,PinId * endId)",
      "call_args": "(startId,endId)",
      "cimguiname": "axNodeEditor_QueryNewLink",
      "defaults": {},
      "funcname": "QueryNewLink",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_QueryNewLink",
      "ret": "bool",
      "signature": "(PinId*,PinId*)",
      "stname": "",
      "templated": false
    }
  ],
  "QueryNewLink1": [
    {
      "args": "(PinId* startId, PinId* endId, const ImVec4* color, float thickness)",
      "argsT": [
        {
          "name": "startId",
          "type": "PinId*"
        },
        {
          "name": "endId",
          "type": "PinId*"
        },
        {
          "name": "color",
          "type": "const ImVec4*"
        },
        {
          "name": "thickness",
          "type": "float"
        }
      ],
      "argsoriginal": "(PinId * startId,PinId * endId,const ImVec4 \u0026 color,float thickness)",
      "call_args": "(startId,endId,color,thickness)",
      "cimguiname": "axNodeEditor_QueryNewLink",
      "defaults": {},
      "funcname": "QueryNewLink",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_QueryNewLink1",
      "ret": "bool",
      "signature": "(PinId*,PinId*,const ImVec4*,float)",
      "stname": "",
      "templated": false
    }
  ],
  "QueryNewNode": [
    {
      "args": "(PinId* pinId)",
      "argsT": [
        {
          "name": "pinId",
          "type": "PinId*"
        }
      ],
      "argsoriginal": "(PinId * pinId)",
      "call_args": "(pinId)",
      "cimguiname": "axNodeEditor_QueryNewNode",
      "defaults": {},
      "funcname": "QueryNewNode",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_QueryNewNode",
      "ret": "bool",
      "signature": "(PinId*)",
      "stname": "",
      "templated": false
    }
  ],
  "QueryNewNode1": [
    {
      "args": "(PinId* pinId, const ImVec4* color, float thickness)",
      "argsT": [
        {
          "name": "pinId",
          "type": "PinId*"
        },
        {
          "name": "color",
          "type": "const ImVec4*"
        },
        {
          "name": "thickness",
          "type": "float"
        }
      ],
      "argsoriginal": "(PinId * pinId,const ImVec4 \u0026 color,float thickness)",
      "call_args": "(pinId,color,thickness)",
      "cimguiname": "axNodeEditor_QueryNewNode",
      "defaults": {},
      "funcname": "QueryNewNode",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_QueryNewNode1",
      "ret": "bool",
      "signature": "(PinId*,const ImVec4*,float)",
      "stname": "",
      "templated": false
    }
  ],
  "AcceptNewItem": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_AcceptNewItem",
      "defaults": {},
      "funcname": "AcceptNewItem",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_AcceptNewItem",
      "ret": "bool",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "AcceptNewItem1": [
    {
      "args": "(const ImVec4* color, float thickness)",
      "argsT": [
        {
          "name": "color",
          "type": "const ImVec4*"
        },
        {
          "name": "thickness",
          "type": "float"
        }
      ],
      "argsoriginal": "(const ImVec4 \u0026 color,float thickness)",
      "call_args": "(color,thickness)",
      "cimguiname": "axNodeEditor_AcceptNewItem",
      "defaults": {},
      "funcname": "AcceptNewItem",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_AcceptNewItem1",
      "ret": "bool",
      "signature": "(const ImVec4*,float)",
      "stname": "",
      "templated": false
    }
  ],
  "RejectNewItem": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_RejectNewItem",
      "defaults": {},
      "funcname": "RejectNewItem",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_RejectNewItem",
      "ret": "void",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "RejectNewItem1": [
    {
      "args": "(const ImVec4* color, float thickness)",
      "argsT": [
        {
          "name": "color",
          "type": "const ImVec4*"
        },
        {
          "name": "thickness",
          "type": "float"
        }
      ],
      "argsoriginal": "(const ImVec4 \u0026 color,float thickness)",
      "call_args": "(color,thickness)",
      "cimguiname": "axNodeEditor_RejectNewItem",
      "defaults": {},
      "funcname": "RejectNewItem",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_RejectNewItem1",
      "ret": "void",
      "signature": "(const ImVec4*,float)",
      "stname": "",
      "templated": false
    }
  ],
  "EndCreate": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_EndCreate",
      "defaults": {},
      "funcname": "EndCreate",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_EndCreate",
      "ret": "void",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "BeginDelete": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_BeginDelete",
      "defaults": {},
      "funcname": "BeginDelete",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_BeginDelete",
      "ret": "bool",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "QueryDeletedLink": [
    {
      "args": "(LinkId* linkId, PinId* startId, PinId* endId)",
      "argsT": [
        {
          "name": "linkId",
          "type": "LinkId*"
        },
        {
          "name": "startId",
          "type": "PinId*"
        },
        {
          "name": "endId",
          "type": "PinId*"
        }
      ],
      "argsoriginal": "(LinkId * linkId,PinId * startId,PinId * endId)",
      "call_args": "(linkId,startId,endId)",
      "cimguiname": "axNodeEditor_QueryDeletedLink",
      "defaults": {},
      "funcname": "QueryDeletedLink",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_QueryDeletedLink",
      "ret": "bool",
      "signature": "(LinkId*,PinId*,PinId*)",
      "stname": "",
      "templated": false
    }
  ],
  "QueryDeletedNode": [
    {
      "args": "(NodeId* nodeId)",
      "argsT": [
        {
          "name": "nodeId",
          "type": "NodeId*"
        }
      ],
      "argsoriginal": "(NodeId * nodeId)",
      "call_args": "(nodeId)",
      "cimguiname": "axNodeEditor_QueryDeletedNode",
      "defaults": {},
      "funcname": "QueryDeletedNode",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_QueryDeletedNode",
      "ret": "bool",
      "signature": "(NodeId*)",
      "stname": "",
      "templated": false
    }
  ],
  "AcceptDeletedItem": [
    {
      "args": "(bool deleteDependencies)",
      "argsT": [
        {
          "name": "deleteDependencies",
          "type": "bool"
        }
      ],
      "argsoriginal": "(bool deleteDependencies)",
      "call_args": "(deleteDependencies)",
      "cimguiname": "axNodeEditor_AcceptDeletedItem",
      "defaults": {},
      "funcname": "AcceptDeletedItem",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_AcceptDeletedItem",
      "ret": "bool",
      "signature": "(bool)",
      "stname": "",
      "templated": false
    }
  ],
  "RejectDeletedItem": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_RejectDeletedItem",
      "defaults": {},
      "funcname": "RejectDeletedItem",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_RejectDeletedItem",
      "ret": "void",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "EndDelete": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_EndDelete",
      "defaults": {},
      "funcname": "EndDelete",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_EndDelete",
      "ret": "void",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "SetNodePosition": [
    {
      "args": "(NodeId nodeId, const ImVec2* editorPosition)",
      "argsT": [
        {
          "name": "nodeId",
          "type": "NodeId"
        },
        {
          "name": "editorPosition",
          "type": "const ImVec2*"
        }
      ],
      "argsoriginal": "(NodeId nodeId,const ImVec2 \u0026 editorPosition)",
      "call_args": "(nodeId,editorPosition)",
      "cimguiname": "axNodeEditor_SetNodePosition",
      "defaults": {},
      "funcname": "SetNodePosition",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_SetNodePosition",
      "ret": "void",
      "signature": "(NodeId,const ImVec2*)",
      "stname": "",
      "templated": false
    }
  ],
  "SetGroupSize": [
    {
      "args": "(NodeId nodeId, const ImVec2* size)",
      "argsT": [
        {
          "name": "nodeId",
          "type": "NodeId"
        },
        {
          "name": "size",
          "type": "const ImVec2*"
        }
      ],
      "argsoriginal": "(NodeId nodeId,const ImVec2 \u0026 size)",
      "call_args": "(nodeId,size)",
      "cimguiname": "axNodeEditor_SetGroupSize",
      "defaults": {},
      "funcname": "SetGroupSize",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_SetGroupSize",
      "ret": "void",
      "signature": "(NodeId,const ImVec2*)",
      "stname": "",
      "templated": false
    }
  ],
  "GetNodePosition": [
    {
      "args": "(NodeId nodeId)",
      "argsT": [
        {
          "name": "nodeId",
          "type": "NodeId"
        }
      ],
      "argsoriginal": "(NodeId nodeId)",
      "call_args": "(nodeId)",
      "cimguiname": "axNodeEditor_GetNodePosition",
      "defaults": {},
      "funcname": "GetNodePosition",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_GetNodePosition",
      "ret": "ImVec2",
      "signature": "(NodeId)",
      "stname": "",
      "templated": false
    }
  ],
  "GetNodeSize": [
    {
      "args": "(NodeId nodeId)",
      "argsT": [
        {
          "name": "nodeId",
          "type": "NodeId"
        }
      ],
      "argsoriginal": "(NodeId nodeId)",
      "call_args": "(nodeId)",
      "cimguiname": "axNodeEditor_GetNodeSize",
      "defaults": {},
      "funcname": "GetNodeSize",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_GetNodeSize",
      "ret": "ImVec2",
      "signature": "(NodeId)",
      "stname": "",
      "templated": false
    }
  ],
  "CenterNodeOnScreen": [
    {
      "args": "(NodeId nodeId)",
      "argsT": [
        {
          "name": "nodeId",
          "type": "NodeId"
        }
      ],
      "argsoriginal": "(NodeId nodeId)",
      "call_args": "(nodeId)",
      "cimguiname": "axNodeEditor_CenterNodeOnScreen",
      "defaults": {},
      "funcname": "CenterNodeOnScreen",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_CenterNodeOnScreen",
      "ret": "void",
      "signature": "(NodeId)",
      "stname": "",
      "templated": false
    }
  ],
  "SetNodeZPosition": [
    {
      "args": "(NodeId nodeId, float z)",
      "argsT": [
        {
          "name": "nodeId",
          "type": "NodeId"
        },
        {
          "name": "z",
          "type": "float"
        }
      ],
      "argsoriginal": "(NodeId nodeId,float z)",
      "call_args": "(nodeId,z)",
      "cimguiname": "axNodeEditor_SetNodeZPosition",
      "defaults": {},
      "funcname": "SetNodeZPosition",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_SetNodeZPosition",
      "ret": "void",
      "signature": "(NodeId,float)",
      "stname": "",
      "templated": false
    }
  ],
  "GetNodeZPosition": [
    {
      "args": "(NodeId nodeId)",
      "argsT": [
        {
          "name": "nodeId",
          "type": "NodeId"
        }
      ],
      "argsoriginal": "(NodeId nodeId)",
      "call_args": "(nodeId)",
      "cimguiname": "axNodeEditor_GetNodeZPosition",
      "defaults": {},
      "funcname": "GetNodeZPosition",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_GetNodeZPosition",
      "ret": "float",
      "signature": "(NodeId)",
      "stname": "",
      "templated": false
    }
  ],
  "RestoreNodeState": [
    {
      "args": "(NodeId nodeId)",
      "argsT": [
        {
          "name": "nodeId",
          "type": "NodeId"
        }
      ],
      "argsoriginal": "(NodeId nodeId)",
      "call_args": "(nodeId)",
      "cimguiname": "axNodeEditor_RestoreNodeState",
      "defaults": {},
      "funcname": "RestoreNodeState",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_RestoreNodeState",
      "ret": "void",
      "signature": "(NodeId)",
      "stname": "",
      "templated": false
    }
  ],
  "Suspend": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_Suspend",
      "defaults": {},
      "funcname": "Suspend",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_Suspend",
      "ret": "void",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "Resume": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_Resume",
      "defaults": {},
      "funcname": "Resume",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_Resume",
      "ret": "void",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "IsSuspended": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_IsSuspended",
      "defaults": {},
      "funcname": "IsSuspended",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_IsSuspended",
      "ret": "bool",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "IsActive": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_IsActive",
      "defaults": {},
      "funcname": "IsActive",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_IsActive",
      "ret": "bool",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "HasSelectionChanged": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_HasSelectionChanged",
      "defaults": {},
      "funcname": "HasSelectionChanged",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_HasSelectionChanged",
      "ret": "bool",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "GetSelectedObjectCount": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_GetSelectedObjectCount",
      "defaults": {},
      "funcname": "GetSelectedObjectCount",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_GetSelectedObjectCount",
      "ret": "int",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "GetSelectedNodes": [
    {
      "args": "(NodeId* nodes, int size)",
      "argsT": [
        {
          "name": "nodes",
          "type": "NodeId*"
        },
        {
          "name": "size",
          "type": "int"
        }
      ],
      "argsoriginal": "(NodeId * nodes,int size)",
      "call_args": "(nodes,size)",
      "cimguiname": "axNodeEditor_GetSelectedNodes",
      "defaults": {},
      "funcname": "GetSelectedNodes",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_GetSelectedNodes",
      "ret": "int",
      "signature": "(NodeId*,int)",
      "stname": "",
      "templated": false
    }
  ],
  "GetSelectedLinks": [
    {
      "args": "(LinkId* links, int size)",
      "argsT": [
        {
          "name": "links",
          "type": "LinkId*"
        },
        {
          "name": "size",
          "type": "int"
        }
      ],
      "argsoriginal": "(LinkId * links,int size)",
      "call_args": "(links,size)",
      "cimguiname": "axNodeEditor_GetSelectedLinks",
      "defaults": {},
      "funcname": "GetSelectedLinks",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_GetSelectedLinks",
      "ret": "int",
      "signature": "(LinkId*,int)",
      "stname": "",
      "templated": false
    }
  ],
  "IsNodeSelected": [
    {
      "args": "(NodeId nodeId)",
      "argsT": [
        {
          "name": "nodeId",
          "type": "NodeId"
        }
      ],
      "argsoriginal": "(NodeId nodeId)",
      "call_args": "(nodeId)",
      "cimguiname": "axNodeEditor_IsNodeSelected",
      "defaults": {},
      "funcname": "IsNodeSelected",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_IsNodeSelected",
      "ret": "bool",
      "signature": "(NodeId)",
      "stname": "",
      "templated": false
    }
  ],
  "IsLinkSelected": [
    {
      "args": "(LinkId linkId)",
      "argsT": [
        {
          "name": "linkId",
          "type": "LinkId"
        }
      ],
      "argsoriginal": "(LinkId linkId)",
      "call_args": "(linkId)",
      "cimguiname": "axNodeEditor_IsLinkSelected",
      "defaults": {},
      "funcname": "IsLinkSelected",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_IsLinkSelected",
      "ret": "bool",
      "signature": "(LinkId)",
      "stname": "",
      "templated": false
    }
  ],
  "ClearSelection": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_ClearSelection",
      "defaults": {},
      "funcname": "ClearSelection",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_ClearSelection",
      "ret": "void",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "SelectNode": [
    {
      "args": "(NodeId nodeId, bool append)",
      "argsT": [
        {
          "name": "nodeId",
          "type": "NodeId"
        },
        {
          "name": "append",
          "type": "bool"
        }
      ],
      "argsoriginal": "(NodeId nodeId,bool append)",
      "call_args": "(nodeId,append)",
      "cimguiname": "axNodeEditor_SelectNode",
      "defaults": {},
      "funcname": "SelectNode",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_SelectNode",
      "ret": "void",
      "signature": "(NodeId,bool)",
      "stname": "",
      "templated": false
    }
  ],
  "SelectLink": [
    {
      "args": "(LinkId linkId, bool append)",
      "argsT": [
        {
          "name": "linkId",
          "type": "LinkId"
        },
        {
          "name": "append",
          "type": "bool"
        }
      ],
      "argsoriginal": "(LinkId linkId,bool append)",
      "call_args": "(linkId,append)",
      "cimguiname": "axNodeEditor_SelectLink",
      "defaults": {},
      "funcname": "SelectLink",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_SelectLink",
      "ret": "void",
      "signature": "(LinkId,bool)",
      "stname": "",
      "templated": false
    }
  ],
  "DeselectNode": [
    {
      "args": "(NodeId nodeId)",
      "argsT": [
        {
          "name": "nodeId",
          "type": "NodeId"
        }
      ],
      "argsoriginal": "(NodeId nodeId)",
      "call_args": "(nodeId)",
      "cimguiname": "axNodeEditor_DeselectNode",
      "defaults": {},
      "funcname": "DeselectNode",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_DeselectNode",
      "ret": "void",
      "signature": "(NodeId)",
      "stname": "",
      "templated": false
    }
  ],
  "DeselectLink": [
    {
      "args": "(LinkId linkId)",
      "argsT": [
        {
          "name": "linkId",
          "type": "LinkId"
        }
      ],
      "argsoriginal": "(LinkId linkId)",
      "call_args": "(linkId)",
      "cimguiname": "axNodeEditor_DeselectLink",
      "defaults": {},
      "funcname": "DeselectLink",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_DeselectLink",
      "ret": "void",
      "signature": "(LinkId)",
      "stname": "",
      "templated": false
    }
  ],
  "DeleteNode": [
    {
      "args": "(NodeId nodeId)",
      "argsT": [
        {
          "name": "nodeId",
          "type": "NodeId"
        }
      ],
      "argsoriginal": "(NodeId nodeId)",
      "call_args": "(nodeId)",
      "cimguiname": "axNodeEditor_DeleteNode",
      "defaults": {},
      "funcname": "DeleteNode",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_DeleteNode",
      "ret": "bool",
      "signature": "(NodeId)",
      "stname": "",
      "templated": false
    }
  ],
  "DeleteLink": [
    {
      "args": "(LinkId linkId)",
      "argsT": [
        {
          "name": "linkId",
          "type": "LinkId"
        }
      ],
      "argsoriginal": "(LinkId linkId)",
      "call_args": "(linkId)",
      "cimguiname": "axNodeEditor_DeleteLink",
      "defaults": {},
      "funcname": "DeleteLink",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_DeleteLink",
      "ret": "bool",
      "signature": "(LinkId)",
      "stname": "",
      "templated": false
    }
  ],
  "HasAnyLinks": [
    {
      "args": "(NodeId nodeId)",
      "argsT": [
        {
          "name": "nodeId",
          "type": "NodeId"
        }
      ],
      "argsoriginal": "(NodeId nodeId)",
      "call_args": "(nodeId)",
      "cimguiname": "axNodeEditor_HasAnyLinks",
      "defaults": {},
      "funcname": "HasAnyLinks",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_HasAnyLinks",
      "ret": "bool",
      "signature": "(NodeId)",
      "stname": "",
      "templated": false
    }
  ],
  "HasAnyLinks1": [
    {
      "args": "(PinId pinId)",
      "argsT": [
        {
          "name": "pinId",
          "type": "PinId"
        }
      ],
      "argsoriginal": "(PinId pinId)",
      "call_args": "(pinId)",
      "cimguiname": "axNodeEditor_HasAnyLinks",
      "defaults": {},
      "funcname": "HasAnyLinks",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_HasAnyLinks1",
      "ret": "bool",
      "signature": "(PinId)",
      "stname": "",
      "templated": false
    }
  ],
  "BreakLinks": [
    {
      "args": "(NodeId nodeId)",
      "argsT": [
        {
          "name": "nodeId",
          "type": "NodeId"
        }
      ],
      "argsoriginal": "(NodeId nodeId)",
      "call_args": "(nodeId)",
      "cimguiname": "axNodeEditor_BreakLinks",
      "defaults": {},
      "funcname": "BreakLinks",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_BreakLinks",
      "ret": "int",
      "signature": "(NodeId)",
      "stname": "",
      "templated": false
    }
  ],
  "BreakLinks1": [
    {
      "args": "(PinId pinId)",
      "argsT": [
        {
          "name": "pinId",
          "type": "PinId"
        }
      ],
      "argsoriginal": "(PinId pinId)",
      "call_args": "(pinId)",
      "cimguiname": "axNodeEditor_BreakLinks",
      "defaults": {},
      "funcname": "BreakLinks",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_BreakLinks1",
      "ret": "int",
      "signature": "(PinId)",
      "stname": "",
      "templated": false
    }
  ],
  "NavigateToContent": [
    {
      "args": "(float duration)",
      "argsT": [
        {
          "name": "duration",
          "type": "float"
        }
      ],
      "argsoriginal": "(float duration)",
      "call_args": "(duration)",
      "cimguiname": "axNodeEditor_NavigateToContent",
      "defaults": {},
      "funcname": "NavigateToContent",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_NavigateToContent",
      "ret": "void",
      "signature": "(float)",
      "stname": "",
      "templated": false
    }
  ],
  "NavigateToSelection": [
    {
      "args": "(bool zoomIn, float duration)",
      "argsT": [
        {
          "name": "zoomIn",
          "type": "bool"
        },
        {
          "name": "duration",
          "type": "float"
        }
      ],
      "argsoriginal": "(bool zoomIn,float duration)",
      "call_args": "(zoomIn,duration)",
      "cimguiname": "axNodeEditor_NavigateToSelection",
      "defaults": {},
      "funcname": "NavigateToSelection",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_NavigateToSelection",
      "ret": "void",
      "signature": "(bool,float)",
      "stname": "",
      "templated": false
    }
  ],
  "ShowNodeContextMenu": [
    {
      "args": "(NodeId* nodeId)",
      "argsT": [
        {
          "name": "nodeId",
          "type": "NodeId*"
        }
      ],
      "argsoriginal": "(NodeId * nodeId)",
      "call_args": "(nodeId)",
      "cimguiname": "axNodeEditor_ShowNodeContextMenu",
      "defaults": {},
      "funcname": "ShowNodeContextMenu",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_ShowNodeContextMenu",
      "ret": "bool",
      "signature": "(NodeId*)",
      "stname": "",
      "templated": false
    }
  ],
  "ShowPinContextMenu": [
    {
      "args": "(PinId* pinId)",
      "argsT": [
        {
          "name": "pinId",
          "type": "PinId*"
        }
      ],
      "argsoriginal": "(PinId * pinId)",
      "call_args": "(pinId)",
      "cimguiname": "axNodeEditor_ShowPinContextMenu",
      "defaults": {},
      "funcname": "ShowPinContextMenu",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_ShowPinContextMenu",
      "ret": "bool",
      "signature": "(PinId*)",
      "stname": "",
      "templated": false
    }
  ],
  "ShowLinkContextMenu": [
    {
      "args": "(LinkId* linkId)",
      "argsT": [
        {
          "name": "linkId",
          "type": "LinkId*"
        }
      ],
      "argsoriginal": "(LinkId * linkId)",
      "call_args": "(linkId)",
      "cimguiname": "axNodeEditor_ShowLinkContextMenu",
      "defaults": {},
      "funcname": "ShowLinkContextMenu",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_ShowLinkContextMenu",
      "ret": "bool",
      "signature": "(LinkId*)",
      "stname": "",
      "templated": false
    }
  ],
  "ShowBackgroundContextMenu": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_ShowBackgroundContextMenu",
      "defaults": {},
      "funcname": "ShowBackgroundContextMenu",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_ShowBackgroundContextMenu",
      "ret": "bool",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "EnableShortcuts": [
    {
      "args": "(bool enable)",
      "argsT": [
        {
          "name": "enable",
          "type": "bool"
        }
      ],
      "argsoriginal": "(bool enable)",
      "call_args": "(enable)",
      "cimguiname": "axNodeEditor_EnableShortcuts",
      "defaults": {},
      "funcname": "EnableShortcuts",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_EnableShortcuts",
      "ret": "void",
      "signature": "(bool)",
      "stname": "",
      "templated": false
    }
  ],
  "AreShortcutsEnabled": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_AreShortcutsEnabled",
      "defaults": {},
      "funcname": "AreShortcutsEnabled",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_AreShortcutsEnabled",
      "ret": "bool",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "BeginShortcut": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_BeginShortcut",
      "defaults": {},
      "funcname": "BeginShortcut",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_BeginShortcut",
      "ret": "bool",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "AcceptCut": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_AcceptCut",
      "defaults": {},
      "funcname": "AcceptCut",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_AcceptCut",
      "ret": "bool",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "AcceptCopy": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_AcceptCopy",
      "defaults": {},
      "funcname": "AcceptCopy",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_AcceptCopy",
      "ret": "bool",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "AcceptPaste": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_AcceptPaste",
      "defaults": {},
      "funcname": "AcceptPaste",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_AcceptPaste",
      "ret": "bool",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "AcceptDuplicate": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_AcceptDuplicate",
      "defaults": {},
      "funcname": "AcceptDuplicate",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_AcceptDuplicate",
      "ret": "bool",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "AcceptCreateNode": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_AcceptCreateNode",
      "defaults": {},
      "funcname": "AcceptCreateNode",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_AcceptCreateNode",
      "ret": "bool",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "GetActionContextSize": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_GetActionContextSize",
      "defaults": {},
      "funcname": "GetActionContextSize",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_GetActionContextSize",
      "ret": "int",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "GetActionContextNodes": [
    {
      "args": "(NodeId* nodes, int size)",
      "argsT": [
        {
          "name": "nodes",
          "type": "NodeId*"
        },
        {
          "name": "size",
          "type": "int"
        }
      ],
      "argsoriginal": "(NodeId * nodes,int size)",
      "call_args": "(nodes,size)",
      "cimguiname": "axNodeEditor_GetActionContextNodes",
      "defaults": {},
      "funcname": "GetActionContextNodes",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_GetActionContextNodes",
      "ret": "int",
      "signature": "(NodeId*,int)",
      "stname": "",
      "templated": false
    }
  ],
  "GetActionContextLinks": [
    {
      "args": "(LinkId* links, int size)",
      "argsT": [
        {
          "name": "links",
          "type": "LinkId*"
        },
        {
          "name": "size",
          "type": "int"
        }
      ],
      "argsoriginal": "(LinkId * links,int size)",
      "call_args": "(links,size)",
      "cimguiname": "axNodeEditor_GetActionContextLinks",
      "defaults": {},
      "funcname": "GetActionContextLinks",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_GetActionContextLinks",
      "ret": "int",
      "signature": "(LinkId*,int)",
      "stname": "",
      "templated": false
    }
  ],
  "EndShortcut": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_EndShortcut",
      "defaults": {},
      "funcname": "EndShortcut",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_EndShortcut",
      "ret": "void",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "GetCurrentZoom": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_GetCurrentZoom",
      "defaults": {},
      "funcname": "GetCurrentZoom",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_GetCurrentZoom",
      "ret": "float",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "GetHoveredNode": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_GetHoveredNode",
      "defaults": {},
      "funcname": "GetHoveredNode",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_GetHoveredNode",
      "ret": "NodeId",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "GetHoveredPin": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_GetHoveredPin",
      "defaults": {},
      "funcname": "GetHoveredPin",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_GetHoveredPin",
      "ret": "PinId",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "GetHoveredLink": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_GetHoveredLink",
      "defaults": {},
      "funcname": "GetHoveredLink",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_GetHoveredLink",
      "ret": "LinkId",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "GetDoubleClickedNode": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_GetDoubleClickedNode",
      "defaults": {},
      "funcname": "GetDoubleClickedNode",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_GetDoubleClickedNode",
      "ret": "NodeId",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "GetDoubleClickedPin": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_GetDoubleClickedPin",
      "defaults": {},
      "funcname": "GetDoubleClickedPin",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_GetDoubleClickedPin",
      "ret": "PinId",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "GetDoubleClickedLink": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_GetDoubleClickedLink",
      "defaults": {},
      "funcname": "GetDoubleClickedLink",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_GetDoubleClickedLink",
      "ret": "LinkId",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "IsBackgroundClicked": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_IsBackgroundClicked",
      "defaults": {},
      "funcname": "IsBackgroundClicked",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_IsBackgroundClicked",
      "ret": "bool",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "IsBackgroundDoubleClicked": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_IsBackgroundDoubleClicked",
      "defaults": {},
      "funcname": "IsBackgroundDoubleClicked",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_IsBackgroundDoubleClicked",
      "ret": "bool",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "GetBackgroundClickButtonIndex": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_GetBackgroundClickButtonIndex",
      "defaults": {},
      "funcname": "GetBackgroundClickButtonIndex",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_GetBackgroundClickButtonIndex",
      "ret": "int",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "GetBackgroundDoubleClickButtonIndex": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_GetBackgroundDoubleClickButtonIndex",
      "defaults": {},
      "funcname": "GetBackgroundDoubleClickButtonIndex",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_GetBackgroundDoubleClickButtonIndex",
      "ret": "int",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "GetLinkPins": [
    {
      "args": "(LinkId linkId, PinId* startPinId, PinId* endPinId)",
      "argsT": [
        {
          "name": "linkId",
          "type": "LinkId"
        },
        {
          "name": "startPinId",
          "type": "PinId*"
        },
        {
          "name": "endPinId",
          "type": "PinId*"
        }
      ],
      "argsoriginal": "(LinkId linkId,PinId * startPinId,PinId * endPinId)",
      "call_args": "(linkId,startPinId,endPinId)",
      "cimguiname": "axNodeEditor_GetLinkPins",
      "defaults": {},
      "funcname": "GetLinkPins",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_GetLinkPins",
      "ret": "bool",
      "signature": "(LinkId,PinId*,PinId*)",
      "stname": "",
      "templated": false
    }
  ],
  "PinHadAnyLinks": [
    {
      "args": "(PinId pinId)",
      "argsT": [
        {
          "name": "pinId",
          "type": "PinId"
        }
      ],
      "argsoriginal": "(PinId pinId)",
      "call_args": "(pinId)",
      "cimguiname": "axNodeEditor_PinHadAnyLinks",
      "defaults": {},
      "funcname": "PinHadAnyLinks",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_PinHadAnyLinks",
      "ret": "bool",
      "signature": "(PinId)",
      "stname": "",
      "templated": false
    }
  ],
  "GetScreenSize": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_GetScreenSize",
      "defaults": {},
      "funcname": "GetScreenSize",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_GetScreenSize",
      "ret": "ImVec2",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "ScreenToCanvas": [
    {
      "args": "(const ImVec2* pos)",
      "argsT": [
        {
          "name": "pos",
          "type": "const ImVec2*"
        }
      ],
      "argsoriginal": "(const ImVec2 \u0026 pos)",
      "call_args": "(pos)",
      "cimguiname": "axNodeEditor_ScreenToCanvas",
      "defaults": {},
      "funcname": "ScreenToCanvas",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_ScreenToCanvas",
      "ret": "ImVec2",
      "signature": "(const ImVec2*)",
      "stname": "",
      "templated": false
    }
  ],
  "CanvasToScreen": [
    {
      "args": "(const ImVec2* pos)",
      "argsT": [
        {
          "name": "pos",
          "type": "const ImVec2*"
        }
      ],
      "argsoriginal": "(const ImVec2 \u0026 pos)",
      "call_args": "(pos)",
      "cimguiname": "axNodeEditor_CanvasToScreen",
      "defaults": {},
      "funcname": "CanvasToScreen",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_CanvasToScreen",
      "ret": "ImVec2",
      "signature": "(const ImVec2*)",
      "stname": "",
      "templated": false
    }
  ],
  "GetNodeCount": [
    {
      "args": "()",
      "argsT": [],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditor_GetNodeCount",
      "defaults": {},
      "funcname": "GetNodeCount",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_GetNodeCount",
      "ret": "int",
      "signature": "()",
      "stname": "",
      "templated": false
    }
  ],
  "GetOrderedNodeIds": [
    {
      "args": "(NodeId* nodes, int size)",
      "argsT": [
        {
          "name": "nodes",
          "type": "NodeId*"
        },
        {
          "name": "size",
          "type": "int"
        }
      ],
      "argsoriginal": "(NodeId * nodes,int size)",
      "call_args": "(nodes,size)",
      "cimguiname": "axNodeEditor_GetOrderedNodeIds",
      "defaults": {},
      "funcname": "GetOrderedNodeIds",
      "location": "",
      "namespace": "ax::NodeEditor",
      "ov_cimguiname": "axNodeEditor_GetOrderedNodeIds",
      "ret": "int",
      "signature": "(NodeId*,int)",
      "stname": "",
      "templated": false
    }
  ],
  "Details_SafeType_voidptr_NodeId_Get": [
    {
      "args": "(Details_SafeType_voidptr_NodeId* __self)",
      "argsT": [
        {
          "name": "__self",
          "type": "Details_SafeType_voidptr_NodeId*"
        }
      ],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditorDetails_SafeType_voidptr_axNodeEditor_NodeId_Get",
      "defaults": {},
      "funcname": "Get",
      "location": "",
      "namespace": "",
      "ov_cimguiname": "axNodeEditorDetails_SafeType_voidptr_axNodeEditor_NodeId_Get",
      "ret": "void*",
      "signature": "(Details_SafeType_voidptr_NodeId*)",
      "stname": "Details_SafeType_voidptr_NodeId",
      "templated": false
    }
  ],
  "Details_SafeType_voidptr_LinkId_Get": [
    {
      "args": "(Details_SafeType_voidptr_LinkId* __self)",
      "argsT": [
        {
          "name": "__self",
          "type": "Details_SafeType_voidptr_LinkId*"
        }
      ],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditorDetails_SafeType_voidptr_axNodeEditor_LinkId_Get",
      "defaults": {},
      "funcname": "Get",
      "location": "",
      "namespace": "",
      "ov_cimguiname": "axNodeEditorDetails_SafeType_voidptr_axNodeEditor_LinkId_Get",
      "ret": "void*",
      "signature": "(Details_SafeType_voidptr_LinkId*)",
      "stname": "Details_SafeType_voidptr_LinkId",
      "templated": false
    }
  ],
  "Details_SafeType_voidptr_PinId_Get": [
    {
      "args": "(Details_SafeType_voidptr_PinId* __self)",
      "argsT": [
        {
          "name": "__self",
          "type": "Details_SafeType_voidptr_PinId*"
        }
      ],
      "argsoriginal": "()",
      "call_args": "()",
      "cimguiname": "axNodeEditorDetails_SafeType_voidptr_axNodeEditor_PinId_Get",
      "defaults": {},
      "funcname": "Get",
      "location": "",
      "namespace": "",
      "ov_cimguiname": "axNodeEditorDetails_SafeType_voidptr_axNodeEditor_PinId_Get",
      "ret": "void*",
      "signature": "(Details_SafeType_voidptr_PinId*)",
      "stname": "Details_SafeType_voidptr_PinId",
      "templated": false
    }
  ]
}