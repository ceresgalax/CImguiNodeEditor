<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <OutputType>Exe</OutputType>
        <TargetFramework>net8.0</TargetFramework>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
    </PropertyGroup>

    <ItemGroup><!--      <PackageReference Include="ClangSharp" Version="17.0.1" />-->
        <PackageReference Include="libclang.runtime.win-x64" Version="18.1.3.2" />
        <PackageReference Include="libclangsharp.runtime.win-x64" Version="18.1.3.1" />
        
      <PackageReference Include="libClangSharp" Version="18.1.3.1" />
    
      <ProjectReference Include="..\ClangSharp\sources\ClangSharp\ClangSharp.csproj" />
    </ItemGroup>
    
    <ItemGroup>
        <!-- This package reference is a DIRTY DISGUSTING HACK to make nuget update deps.json with the standard runtimes/ native library load directories. -->
        <PackageReference Include="CeresCubeb-native" Version="1.0.4" />
    </ItemGroup>
    
    <PropertyGroup Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'X64'">
        <CmakeArch>x86_64</CmakeArch>
        <RidArch>x64</RidArch>
    </PropertyGroup>
    <PropertyGroup Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'ARM64'">
        <CmakeArch>arm64</CmakeArch>
        <RidArch>arm64</RidArch>
    </PropertyGroup>
    
    <PropertyGroup>
        <IsWindows>false</IsWindows>
        <IsOsx>false</IsOsx>
    </PropertyGroup>
    
    <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('Windows'))">
        <IsWindows>true</IsWindows>
        <OutRid>win-$(RidArch)</OutRid>
    </PropertyGroup>
    
    <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('OSX'))">
        <IsOsx>true</IsOsx>
        <OutRid>osx-$(RidArch)</OutRid>
    </PropertyGroup>
    
<!--    <ItemGroup Condition="$(IsWindows)">-->
<!--        <Content Include="../../llvm-prefix/bin/libclang.dll;../ClangSharp/build/bin/Debug/libClangSharp.dll">-->
<!--            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>-->
<!--            <LinkBase>runtimes\$(OutRid)\native</LinkBase>-->
<!--            <PublishState>Included</PublishState>-->
<!--        </Content>-->
<!--    </ItemGroup>-->
<!--    <ItemGroup Condition="$(IsOsx)">-->
<!--        <Content Include="../../llvm-prefix/lib/libclang.dylib;../ClangSharp/build/lib/libClangSharp.dylib">-->
<!--            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>-->
<!--            <LinkBase>runtimes\$(OutRid)\native</LinkBase>-->
<!--            <PublishState>Included</PublishState>-->
<!--        </Content>-->
<!--    </ItemGroup>-->

</Project>
